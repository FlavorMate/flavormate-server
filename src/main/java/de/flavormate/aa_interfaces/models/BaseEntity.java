package de.flavormate.aa_interfaces.models;

import jakarta.persistence.*;
import lombok.*;
import lombok.experimental.SuperBuilder;
import org.hibernate.annotations.CreationTimestamp;
import org.hibernate.annotations.UpdateTimestamp;

import java.time.Instant;

/**
 * An abstract base class for JPA entities, providing common fields such as an identifier and a
 * version number.
 *
 * <p>
 * The class is annotated with Lombok's {@code @Data} annotation, which automatically generates
 * standard boilerplate code such as getters, setters, and the toString method.
 * </p>
 *
 * <p>
 * The {@code @NoArgsConstructor} annotation is used to generate a no-argument constructor.
 * </p>
 *
 * <p>
 * The {@code @EqualsAndHashCode} annotation is configured with
 * {@code onlyExplicitlyIncluded = true} to include only explicitly marked fields (in this case, the
 * {@code id} and {@code version} fields) in the equals and hashCode methods.
 * </p>
 *
 * <p>
 * The class is marked with {@code @MappedSuperclass}, indicating that it should be mapped to the
 * database but is not an entity itself.
 * </p>
 *
 * <p>
 * The {@code id} field represents the primary key of the entity, and it is annotated with
 * {@code @Id} and {@code @GeneratedValue} to indicate that it is generated by the database.
 * </p>
 *
 * <p>
 * The {@code version} field represents the optimistic locking version of the entity, and it is
 * annotated with {@code @Version}.
 * </p>
 */
@MappedSuperclass
@SuperBuilder
@Data
@NoArgsConstructor
@EqualsAndHashCode(onlyExplicitlyIncluded = true)
@ToString(onlyExplicitlyIncluded = true)
public abstract class BaseEntity {

	/**
	 * The primary key of the entity.
	 */
	@Id
	@GeneratedValue(strategy = GenerationType.IDENTITY)
	@Column(nullable = false)
	@EqualsAndHashCode.Include
	@ToString.Include
	protected Long id;

	/**
	 * The optimistic locking version of the entity.
	 */
	@Version
	@Column(nullable = false)
	@EqualsAndHashCode.Include
	@Builder.Default
	@ToString.Include
	protected Long version = 0L;

	/**
	 * Timestamp indicating when the entity was initially published or created.
	 */
	@CreationTimestamp
	protected Instant createdOn;

	/**
	 * Timestamp indicating the last modification time of the entity.
	 */
	@UpdateTimestamp
	protected Instant lastModifiedOn;
}
